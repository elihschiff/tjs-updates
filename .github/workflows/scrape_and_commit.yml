---
name: Daily GraphQL Scrape and Commit
on:
  schedule:
    - cron: 0 */6 * * *
  workflow_dispatch:  # This allows manual triggering
jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: Run GraphQL query and update data
        run: python fetch_data.py
      # - name: Create meta.json file
      #   run: echo {\"last_updated\":\"$(date --iso-8601=seconds -u)\"} > $GITHUB_WORKSPACE/meta.json

      - name: Check if clean_data.json has changed and generate patch if it has
        run: |
          git add clean_data.json

          # Generate patch for `clean_data.json` if there are changes.
          if git diff --cached --quiet --exit-code --name-only | grep -q '^clean_data.json$'; then
            echo "No changes to clean_data.json."
          else
            echo "Changes detected in clean_data.json. Generating patch."
            git diff --cached clean_data.json > clean_data.patch
          fi

      - name: Send patch to Discord webhook if it exists
        if: exists('clean_data.patch')
        run: |
          curl -X POST -H "Content-Type: multipart/form-data" \
          -F "file=@clean_data.patch" \
          https://discord.com/api/webhooks/$WEBHOOK_LOCATION

          rm clean_data.patch

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "TJs-Scraper" && git config user.email "tjs-scraper@users.noreply.github.com"

          git add .

          # Check if there are any changes to commit
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Data update $(date -u) [skip ci]"
            git push
          fi
